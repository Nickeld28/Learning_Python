"""
По книге "Изучаем Python" Эрика Мэтиза, 3-е издание, издательство ПИТЕР, 2020 г.
с. 170

Каждая функция, являющаяся частью класса, называется методом.
Метод __init__ выполняется автоматически при создании каждого нового экземпляра класса.
Параметр self обязателен в определении метода. При каждом вызове метода, self автоматически передается как ссылка
для каждого экземпляра класса, она предоставляет доступ к атрибутам и методам класса.
Любая переменная с префиксом self доступна для каждого метода в классе, и к ней можно обращатся в каждом экземпляре.
Переменные класса к которым можно обращатся через экземпляры называются атрибутами.

"""


# Создание класса Dog
class Dog:
    """ Простая модель собаки """

    def __init__(self, name, age):
        """ Инициализирует атрибуты name и age. """
        self.name = name
        self.age = age

    def sit(self):
        """ Собака садится по команде. """
        print(f"{self.name} is now sitting.")

    def roll_over(self):
        """ Собака перекатывается по команде. """
        print(f"{self.name} rolled over!")


# Создание экземпляра класса Dog
my_dog = Dog('Willie', 6)

# Создание еще одного экземпляра класса Dog
your_dog = Dog('Lucy', 3)

# Для обращения к атрибутам экземпляра используется "точечная" запись
print(f"My dog's name is {my_dog.name}.")
print(f"My dog is {my_dog.age} years old.")

print(f"Your dog's name is {your_dog.name}.")
print(f"Your dog is {your_dog.age} years old.")

# Для обращения к методам класса также используется "точечная" запись и круглые скобки, т.к. метод -  это функция
my_dog.sit()
my_dog.roll_over()
your_dog.sit()
your_dog.roll_over()



