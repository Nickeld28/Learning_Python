"""
Золотой фонд Python

Присваивание и кортежи
Существует пространство имен и объекты
Имя является ссылкой на объект
В Python нет переменных, а есть связывание (присваивание), т.к. ссылочная модель данных.
Существует сборщик мусора, который "съедает" объекты, на которых нет ссылок.
Имена не имеют типов, типы только у объектов.
"""
import turtle

x = 5
n = x
# n == x  - True, x is n - True, x и n ссылаются на один и тот же объект

# множественное присваивание (кортежное)
a, b, c = 1, 2, 3
a, b, c = c, a, b  # алгоритм обмена переменными значениями с помощью кортежа, без временной переменной
T = 1, 2, 3, 4, 5
print(type(T))  # class <tuple> - неизменяемый тип данных, если в кортеже есть переменные, то их значения могут меняться
# в кортеж можно положить только данные одного типа
print(T[0] + T[1])
x, y, *rest = T
*rest_, k, m = T
print(x, y)
print(k, m)
print(*T, sep=':', end='!\n')


def hellow_n(name: str, num: int):  # заголовок функции
    for i in range(num):  # тело функции
        print(name, 'привет')  # тело функции


hellow_n("Вася", 5)
hellow_n("Петя", 3)
masya = "Мася", 2
hellow_n(*masya)

# Функция range - генератор арифметических прогрессий
# A = range(start, stop, step), A - это арифметическая прогрессия, итерируемый объект, которую сгенерировал range
A = range(1, 100, 2)  # прогрессия сгенерирована в виде объекта, но ее значения еще не вычислены
print(A[5])  # когда мы делаем запрос к значению, оно будет вычислено
A = [1, 2, 3]  # список, тип list, это изменяемый итерируемый объект
# в списке можно положить данные разных типов
arr = [(1, 10), (2, 20), (3, 30)]
for tup in arr:
    angle, length = tup
    turtle.forward(length)

for angle, length in enumerate(arr):
    print(length, angle)

