"""
Напишите программу, которая умеет шифровать и расшифровывать шифр подстановки.
Программа принимает на вход две строки одинаковой длины, на первой строке записаны символы исходного алфавита,
на второй строке — символы конечного алфавита, после чего идёт строка, которую нужно зашифровать переданным ключом,
и ещё одна строка, которую нужно расшифровать.

Пусть, например, на вход программе передано:
abcd
*d%#
abacabadaba
#*%*d*%

Это значит, что символ a исходного сообщения заменяется на символ * в шифре, b заменяется на d, c — на % и d — на #.
Нужно зашифровать строку abacabadaba и расшифровать строку #*%*d*% с помощью этого шифра. Получаем следующие строки,
которые и передаём на вывод программы:

*d*%*d*#*d*
dacabac

Sample Input 1:
abcd
*d%#
abacabadaba
#*%*d*%

Sample Output 1:
*d*%*d*#*d*
dacabac

Sample Input 2:
dcba
badc
dcba
badc

Sample Output 2:
badc
dcba
"""

input_data = [input() for i in range(4)]  # читаем данные ввода, присваем в список
encryption, decryption, result_1, result_2 = {}, {}, "", ""  # резервируем память под два словаря и два результата
for i in range(len(input_data[0])):  # проходим циклом по индексам первого списка (длины первых двух списков равны)
    encryption[input_data[0][i]] = input_data[1][i]  # наполняем словарь для шифрования
    decryption[input_data[1][i]] = input_data[0][i]  # наполняем словарь для расшифровки
for el in input_data[2]:  # проходим циклом по строке, которую надо зашифровать
    result_1 = result_1 + encryption[el]  # результат шифровки пишем в переменную
for el in input_data[3]:  # проходим циклом по строке, которую надо расшифровать
    result_2 = result_2 + decryption[el]  # результат расшифровки пишем в переменную
print(result_1, result_2, sep='\n')  # печатаем оба результата на разных сроках
