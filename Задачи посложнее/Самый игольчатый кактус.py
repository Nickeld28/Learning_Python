"""
Нам нужно найти максимальное количество цветов, которое располагается на кактусах с пирамидообразными иголками.
Известно, что на кактусы с пирамидообразными иголками всегда имеют нечетное количество цветов.

На вход программе подаются 5 строк, содержащих название кактуса и количество цветов на нем в следующем формате:

название_кактуса *пробел* количество_цветов_на_нем

Необходимо найти максимальное количество цветов, которое встречается на кактусах с пирамидообразными иголками
и вывести это число.

Для получения количества цветов из строки можно воспользоваться методом split(), потому что данные в нашем
случае как раз вводятся через пробел.

ввод:
ежидзе 23
иглоукалыватель 65
спиральник 178
зеленый 63
ламинетель 24

вывод:
65
"""

# Создаем список кактусов, на основе введенных данных
kaktus_list = [input() for _ in range(5)]
# Создаем пока еще пустой список количества цветков на всех кактусах
num_list = []
# Создадим пустой результирующий список, он в дальнейшем поможет в решении
res_list = []
# С помощью цикла будем преобразовывать введеные данные в диапазоне по количеству строк ввода
for i in range(5):
    # К списку добавляем элементы с помощью метода append,
    # Методом split делим введенную строку и берем элемент с индексом 1,
    # Полученную строку преобразуем в целое число с помощью int
    num_list.append(int(kaktus_list[i].split()[1]))
# Теперь нам надо проверить есть ли четные числа в списке num_list,
# На четные числа мы проверим каждый элемент списка с помощью цикла
for i in range(5):
    # Условием проверки на четность является деление на 2 без остатка,
    # Найдем все нечетные и запишем их в новый список res_list
    if num_list[i] % 2 != 0:
        # Будем добавлять нечетные числа в список с помощью append
        res_list.append(num_list[i])
# C помощью функции maх определяем максимальное число в списке res_list
# Функция print выводит ответ
print(max(res_list))
# Готово! Программа выдает ответ, а всего 9 строчек кода,
# а комментариев к ним еще больше, для ясности новичкам.

# а кто-то в комментах решил так:
# m = []
# for _ in range(5):
#     a = input().split()
#     if int(a[1]) % 2 == 1:
#         m.append(int(a[1]))
# print(max(m))
